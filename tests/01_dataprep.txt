
#############################################################################
####              Familiarity analysis - data preparation                ####
#############################################################################


# Set working directory and import libraries
setwd("C:/Users/maxim/UQAM/Montiglio, Pierre-Olivier - Maxime Fraser Franco/MFraserFranco(2019-06-11)/Behaviour_projects/familiarity_analysis/data")
library(data.table)
library(dplyr)




# Postgame tables block --------------------------------------------------------------------------------------------------------------

# 1. Import datasets --------------------------------------------------------
# ---------------------------------------------------------------------------

# Import match_info and filter
matchinfo <- fread("matchinfo.csv")
matchinfo$platform <- gsub("GRDK", "PC", matchinfo$platform) # GRDK to PC
matchinfo <- unique(matchinfo) # remove duplicates
# Save table
fwrite(matchinfo,
       file = "C:/Users/mffranco/UQAM/Montiglio, Pierre-Olivier - Maxime Fraser Franco/MFraserFranco(2019-06-11)/Behaviour_projects/familiarity_analysis/outputs/01_matchinfo_filtered.csv",
       append = FALSE,
       sep = ",")
# ----

# Import postgame killer and merge
postgameK <- fread("postgame_killer_familiarity.csv")
# these two levels represent the same thing (PC)
postgameK$platform <- gsub("GRDK", "PC", postgameK$platform)
# Be sure that we only have normal matches
levels(as.factor(postgameK$match_end_reason)) # all good
# remove possible duplicates (way faster than unique())
postgameK <- postgameK %>% distinct(match_id, .keep_all = TRUE)
# matches under 35 minutes
postgameK <- postgameK[game_duration < 2100]
# remove timestamp (dont need it in the end)
postgameK[, timestamp := NULL]
# merge with matchinfo1 to have new players only
postgameK1 <- merge(postgameK, matchinfo[role == "VE_Slasher"], by = c("platform", "mirrors_id", "match_id"))
rm(postgameK)
# 
# Save table
fwrite(postgameK1,
       file = "C:/Users/mffranco/UQAM/Montiglio, Pierre-Olivier - Maxime Fraser Franco/MFraserFranco(2019-06-11)/Behaviour_projects/familiarity_analysis/outputs/01_postgameK_filtered.csv",
       append = FALSE,
       sep = ",")
# ----

# Import postgame survivor and merge
postgameS <- fread("postgame_survivor_familiarity.csv")
# merge right away because operations take extremely long due to large table
postgameS1 <- merge(postgameS, matchinfo[role == "VE_Camper"], by = c("platform", "character_name", "mirrors_id", "match_id"))
rm(postgameS) # remove the table to save memory
# matches under 35 minutes
postgameS1 <- postgameS1[game_duration < 2100]
# these two levels represent the same thing (PC)
postgameS1$platform <- gsub("GRDK", "PC", postgameS1$platform)
# Remove outcomes where players disconnected (forgot to do it in the SQL query)
postgameS1 <- postgameS1[!(match_end_reason %in% c("KillerLeft", "KillerLeftEarly", "PlayerLeftDuringLoading"))]
# remove possible duplicates (way faster than unique())
postgameS1 <- postgameS1 %>% distinct()
# Arrange the timestamps (remove timestamps)
postgameS1[, timestamp.x := NULL][, timestamp.y := NULL]
# 
# Save table
fwrite(postgameS1,
       file = "C:/Users/mffranco/UQAM/Montiglio, Pierre-Olivier - Maxime Fraser Franco/MFraserFranco(2019-06-11)/Behaviour_projects/familiarity_analysis/outputs/01_postgameS_filtered.csv",
       append = FALSE,
       sep = ",")
# ----

# No need to merge these two tables with matchinfo anymore
rm(matchinfo)



# 2. Change some attributes to the survivor and killer data then merge -----
# ---------------------------------------------------------------------------
# Postgame killer
postgameK1[, ":="(match_end_reason = NULL, character_name.x = NULL, character_name.y = NULL, total_prey_dead = sacrificed_count + killed_count)]
# Calculate bloodpoints from specific killer behaviour
postgameK1[, bloodpoints := sum(brutality, deviousness, hunter, sacrifice), by = .(match_id, mirrors_id)]
postgameK1[,timestamp := NULL]
# variables not matching with postgame survivor are :
# outcome (postgameS1), escapees_count, sacrificed_count, killed_count, total_prey_dead
# Extract the variables in a seperate table to be merged after
postgameK1_variables <- postgameK1[, c(1, 2, 3, 6:14, 18)]
# remove the variables
postgameK1[, c(6:14, 18) := NULL]


# Postgame survivor
# variables not matching with postgame survivor are :
# outcome, escapees_count(postgameK1), sacrificed_count(postgameK1), killed_count(postgameK1), total_prey_dead(postgameK1)
postgameS1[, match_end_reason := NULL][, character_name := NULL]
# Calculate bloodpoints from specific survivor behaviour
postgameS1[, bloodpoints := sum(boldness, survival, altruism, objectives), by = .(match_id, mirrors_id)]
# Take out matches where the survivor disconnected
postgameS1 <- postgameS1[!(outcome %in% "Disconnected")]
# Extract outcome variable in a seperate table to be merged afterwards
postgames1_variables <- postgameS1[, c(1, 2, 3, 5, 7:11)]
# Remove variables from original table
postgameS1[, c(5, 7:11) := NULL]


# binding both tables together
postgame_total <- rbind(postgameK1, postgameS1)
# merging with remaining variables (adding NA when not matching)
postgame_total <- merge(postgame_total, postgameK1_variables, all.x = TRUE, by = c("platform", "mirrors_id, "match_id"))
postgame_total <- merge(postgame_total, postgames1_variables, all.x = TRUE, by = c("platform", "mirrors_id", "match_id"))

# Save table
fwrite(postgame_total,
       file = "C:/Users/mffranco/UQAM/Montiglio, Pierre-Olivier - Maxime Fraser Franco/MFraserFranco(2019-06-11)/Behaviour_projects/familiarity_analysis/outputs/01_postgame_total.csv",
       append = FALSE,
       sep = ",")

# remove unused tables
rm(postgameK1_variables, postgames1_variables, postgameK1, postgameS1)

# Only keep ids, matches, and role to merge with other tables
ids_role <- postgame_total[,.(mirrors_id, match_id, role)]

# remove postgame table for the moment
rm(postgame_total)

# End of postgame tables block -------------------------------------------------------------------------------------------------------






# Gameplay tables block --------------------------------------------------------------------------------------------------------------

# 1. Import datasets --------------------------------------------------------
# ---------------------------------------------------------------------------
# Gameplay killer
gameplay_killer <- fread("gameplay_killer_familiarity.csv")
# merge with postgame ids to make table smaller
gameplay_killer1 <- merge(gameplay_killer, ids_role[role == "VE_Slasher"],
                          by = c("mirrors_id", "match_id"))
# remove gameplay_killer
rm(gameplay_killer)
# Arrange timestamp
gameplay_killer1[, timestamp := NULL]
# Save table
fwrite(gameplay_killer1,
       file = "C:/Users/mffranco/UQAM/Montiglio, Pierre-Olivier - Maxime Fraser Franco/MFraserFranco(2019-06-11)/Behaviour_projects/familiarity_analysis/outputs/01_gameplay_killer_filtered.csv",
       append = FALSE,
       sep = ",")

# ----

# Gameplay survivor
gameplay_survivor <- fread("gameplay_survivor_familiarity.csv")
# merge with postgame ids to make table smaller
gameplay_survivor1 <- merge(gameplay_survivor, ids_role[role == "VE_Camper"],
                            by = c("mirrors_id", "match_id"))
# remove gameplay_killer
rm(gameplay_survivor)
# Remove
gameplay_survivor1[, timestamp := NULL]
# Save table
fwrite(gameplay_survivor1,
       file = "C:/Users/mffranco/UQAM/Montiglio, Pierre-Olivier - Maxime Fraser Franco/MFraserFranco(2019-06-11)/Behaviour_projects/familiarity_analysis/outputs/01_gameplay_survivor_filtered.csv",
       append = FALSE,
       sep = ",")

# remove the ids_role table
rm(ids_role)



# 2. Merge both gameplay tables ---------------------------------------------
# ---------------------------------------------------------------------------
# Start by removing variables that dont fit together
# Gameplay killer
variables_killer <- gameplay_killer1[,c(1:3, 5:12, 14)]
gameplay_killer1[, c(5:12, 14) := NULL]

# Gameplay survivor
variables_survivor <- gameplay_survivor1[,c(1:3, 5:11)]
gameplay_survivor1[, c(5:11) := NULL]

# binding both tables together
gameplay_total <- rbind(gameplay_killer1, gameplay_survivor1)
# merging with remaining variables (adding NA when not matching)
gameplay_total <- merge(gameplay_total, variables_killer, all.x = TRUE, by = c("platform", "mirrors_id", "match_id"))
gameplay_total <- merge(gameplay_total, variables_survivor, all.x = TRUE, by = c("platform", "mirrors_id", "match_id"))
gameplay_total$platform <- gsub("GRDK", "PC", gameplay_total$platform) # correct the platform variable

# Save table
fwrite(gameplay_total,
       file = "C:/Users/mffranco/UQAM/Montiglio, Pierre-Olivier - Maxime Fraser Franco/MFraserFranco(2019-06-11)/Behaviour_projects/familiarity_analysis/outputs/01_gameplay_total.csv",
       append = FALSE,
       sep = ",")

# Remove unused tables
rm(gameplay_killer1, gameplay_survivor1, variables_killer, variables_survivor)

# End of gameplay tables block -------------------------------------------------------------------------------------------------------







# 1. Merge datasets ---------------------------------------------------------
# ---------------------------------------------------------------------------
setwd("C:/Users/mffranco/UQAM/Montiglio, Pierre-Olivier - Maxime Fraser Franco/MFraserFranco(2019-06-11)/Behaviour_projects/familiarity_analysis/outputs")
# re import postgame_total data
postgame_total <- fread("01_postgame_total.csv")

# Re import matchinfo to have the timestamp
matchinfo <- fread("01_matchinfo_filtered.csv", select = c("timestamp", "match_id", "mirrors_id"))

# Merge both tables
complete_table <- merge(postgame_total, gameplay_total, by = c("platform", "mirrors_id", "match_id", "role"))

# Remove older tables
rm(postgame_total, gameplay_total)

# To have the timestamp
complete_table <- merge(complete_table, matchinfo, by = c("match_id", "mirrors_id"))

fwrite(complete_table,
       file = "C:/Users/mffranco/UQAM/Montiglio, Pierre-Olivier - Maxime Fraser Franco/MFraserFranco(2019-06-11)/Behaviour_projects/familiarity_analysis/outputs/01_complete_table.csv",
       append = FALSE,
       sep = ",")



# 2. Calculate matches played -----------------------------------------------
# ---------------------------------------------------------------------------
# Remove matches with 0 bloodpoints
complete_table <- complete_table[bloodpoints!=0]

# By role
complete_table[, n_matches_role := length(unique(match_id)), by = .(mirrors_id, role)]

# By map
complete_table[, n_matches_map := length(unique(match_id)), by = .(mirrors_id, map_name)]

# By map and role
complete_table[, n_matches_both := length(unique(match_id)), by = .(mirrors_id, role, map_name)]

# Total
complete_table[, n_matches_total := length(unique(match_id)), by = mirrors_id]


# Reorder to have timestamp as the first column
setcolorder(complete_table, c(44, 1:43, 45:48))

# Save final table
fwrite(complete_table,
       file = "C:/Users/mffranco/UQAM/Montiglio, Pierre-Olivier - Maxime Fraser Franco/MFraserFranco(2019-06-11)/Behaviour_projects/familiarity_analysis/outputs/01_complete_table.csv",
       append = FALSE,
       sep = ",")

# there are 32 maps, so we should at least have players that did above 100 matches to somewhat have balanced matches
